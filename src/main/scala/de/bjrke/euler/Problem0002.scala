package de.bjrke.euler

/**
 * Each new term in the Fibonacci sequence is generated by adding the
 * previous two terms. By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not
 * exceed four million, find the sum of the even-valued terms.
 */
class Problem0002 extends Problem[Int] {

  override val result = 4613732

  override def apply = sum(0, fibtupel(0,1))

  def sum( current:Int, tupel: fibtupel) : Int = {
    if (tupel.c >= 4000000) {
      current
    } else if (tupel.c % 2 == 0 ) {
      sum( current + tupel.c, tupel.next ) 
    } else {
      sum( current, tupel.next )
    }
  }
  case class fibtupel( a:Int, b:Int) {
    val c = a + b
    def next = fibtupel(b,c)
  }

}
