apply plugin: 'scala'
apply plugin: 'idea'

repositories {
    mavenCentral()
}

class LocalTestResult {
    TestDescriptor _descriptor
    TestResult _result

    def duration() {
        return _result.endTime - _result.startTime
    }
}

test {
    useTestNG()
    testLogging {
        events "passed", "skipped", "failed"
    }

    List<LocalTestResult> _results = []

    beforeSuite{
        _results = []
    }
    afterTest { descriptor, result ->
        _results += new LocalTestResult(_descriptor: descriptor, _result: result)
    }
    afterSuite{
        if ( !_results.isEmpty() ) {
            println('-= Hall of Shame =- -= The Bad Ten =-')
            _results.sort { it.duration() }.reverse().take(10).each {
                println("${(it.duration()) / 1000.0} secs: ${it._descriptor.className}.${it._descriptor.name}")
            }
            _results = []
        }
    }
}

dependencies {
    compile 'org.scala-lang:scala-library:2.11.7'

    testCompile 'org.testng:testng:6.9.9'
    testCompile 'org.scalatest:scalatest_2.11:2.2.5'
    testCompile 'org.clapper:classutil_2.11:1.0.6'

}
